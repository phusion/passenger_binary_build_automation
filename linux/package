#!/bin/bash
set -e
ROOTDIR=`dirname "$0"`
ROOTDIR=`cd "$ROOTDIR/.." && pwd`
source "$ROOTDIR/shared/lib/library.sh"

INPUT_DIR=
ARCHITECTURE=
OUTPUT_DIR=

function usage()
{
	echo "Usage: ./package [OPTIONS]"
	echo "Package built Passenger binaries."
	echo
	echo "Required options:"
	echo "  -i DIR     The output directory written to by build script"
	echo "  -a ARCH    Architecture of the build (x86_64)"
	echo "  -o DIR     Path in which to store output products"
	echo
	echo "Optional options:"
	echo "  -h         Show usage"
}

function parse_options()
{
	local OPTIND=1
	local opt
	while getopts "i:a:o:h" opt; do
		case "$opt" in
		i)
			INPUT_DIR="$OPTARG"
			;;
		a)
			ARCHITECTURE="$OPTARG"
			;;
		o)
			OUTPUT_DIR="$OPTARG"
			;;
		h)
			usage
			exit
			;;
		*)
			return 1
			;;
		esac
	done

	if [[ "$INPUT_DIR" = "" ]]; then
		echo "ERROR: please specify an input directory with -i."
		exit 1
	fi
	if [[ "$ARCHITECTURE" = "" ]]; then
		echo "ERROR: please specify an architecture with -a."
		exit 1
	fi
	if [[ "$OUTPUT_DIR" = "" ]]; then
		echo "ERROR: please specify an output directory with -o."
		exit 1
	fi
}

parse_options "$@"
set -o pipefail
export GZIP=--best

INPUT_DIR="`absolute_path \"$INPUT_DIR\"`"
OUTPUT_DIR="`absolute_path \"$OUTPUT_DIR\"`"

NGINX_VERSION=`/bin/ls -1 "$INPUT_DIR"/support-binaries/nginx-* | sed 's/.*-//'`

run mkdir -p "$OUTPUT_DIR"
run tar -czf "$OUTPUT_DIR/agent-$ARCHITECTURE-linux.tar.gz" \
	-C "$INPUT_DIR/support-binaries" PassengerAgent
run tar -czf "$OUTPUT_DIR/agent-$ARCHITECTURE-linux.dbg.tar.gz" \
	-C "$INPUT_DIR/support-binaries" PassengerAgent.dbg
run tar -czf "$OUTPUT_DIR/nginx-$NGINX_VERSION-$ARCHITECTURE-linux.tar.gz" \
	-C "$INPUT_DIR/support-binaries" "nginx-$NGINX_VERSION"

for RUBY_EXT_DIR in `/bin/ls -1 "$INPUT_DIR/ruby-extensions"`; do
	run tar -czf "$OUTPUT_DIR/rubyext-$RUBY_EXT_DIR.tar.gz" \
		-C "$INPUT_DIR/ruby-extensions/$RUBY_EXT_DIR" \
		passenger_native_support.so
done
